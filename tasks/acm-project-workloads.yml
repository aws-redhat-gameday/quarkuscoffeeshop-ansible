---
- name: check if  project "{{ development_project }}" exists
  shell: "{{ oc_location }} get project {{ development_project }}"
  register: user_project
  ignore_errors: true
  changed_when: false
  tags: acm-workload

- name: create projects 
  command: "{{ oc_location }} adm new-project {{ item }}"
  when: user_project is failed
  tags: acm-workload
  ignore_errors: true 
  with_items:
    - "{{ development_project }}"
    - "{{ homeoffice_project }}"
    - "{{ project_namespace }}"

- name: Create Service Account for Pipelines
  kubernetes.core.k8s:
    state: present
    namespace:  "{{ development_project }}"
    definition: "{{ lookup('file', 'pipeline-sa.yaml') }}"
  tags: acm-workload

- name: Set privileged containers for the push
  shell: "{{ oc_location }} adm policy add-scc-to-user privileged -z pipeline -n {{ development_project }}"
  tags: acm-workload

- name: set permissions project {{ homeoffice_project }}
  command: "{{ oc_location }} adm policy add-role-to-user admin system:serviceaccount:{{ homeoffice_project }}:pipeline -n {{ item }}"
  tags: acm-workload
  ignore_errors: true 
  with_items:
    - "{{ development_project }}"

- name: set permissions project "{{ homeoffice_project }}" 
  command: "{{ oc_location }} policy add-role-to-group system:image-puller system:serviceaccounts:{{ homeoffice_project }} -n {{ item }}"
  tags: acm-workload
  ignore_errors: true 
  with_items:
    - "{{ development_project }}"

- name: set permissions project "{{ homeoffice_project }}" 
  command: "{{ oc_location }} adm policy add-role-to-user admin system:serviceaccount:{{ item }}:pipeline -n {{ homeoffice_project }}"
  tags: acm-workload
  ignore_errors: true 
  with_items:
    - "{{ development_project }}"

- name: set permissions project {{ project_namespace }}
  command: "{{ oc_location }} adm policy add-role-to-user admin system:serviceaccount:{{ project_namespace }}:pipeline -n {{ item }}"
  tags: acm-workload
  ignore_errors: true 
  with_items:
    - "{{ development_project }}"

- name: set permissions project "{{ project_namespace }}" 
  command: "{{ oc_location }} policy add-role-to-group system:image-puller system:serviceaccounts:{{ project_namespace }} -n {{ item }}"
  ignore_errors: true 
  with_items:
    - "{{ development_project }}"

- name: set permissions project "{{ project_namespace }}" 
  command: "{{ oc_location }} adm policy add-role-to-user admin system:serviceaccount:{{ item }}:pipeline -n {{ project_namespace }}"
  tags: acm-workload
  ignore_errors: true 
  with_items:
    - "{{ development_project }}"
    
- name: AMQ Streams installation
  vars: 
    project_namespace: "{{ homeoffice_project }}"
  include_tasks: amq-streams-install.yml
  tags: acm-workload

- name: Create Postgres Secret
  kubernetes.core.k8s:
    state: present
    namespace:  "{{ homeoffice_project }}"
    definition: "{{ lookup('template', 'postgres-secret.j2') }}"
  tags: acm-workload

- name: Create Postgres Database
  kubernetes.core.k8s:
    state: present
    namespace:  "{{ homeoffice_project }}"
    definition: "{{ lookup('template', 'postgres.yaml.j2') }}"
  tags: acm-workload

